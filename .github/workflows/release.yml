name: Release Management

on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for existing tags
        id: check_tags
        run: |
          if ! git describe --tags > /dev/null 2>&1; then
            echo "has_tags=false" >> $GITHUB_OUTPUT
          else
            echo "has_tags=true" >> $GITHUB_OUTPUT
          fi

      - name: Create initial tag
        if: steps.check_tags.outputs.has_tags == 'false'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          echo "Creating initial v0.1.0 tag"
          git tag -a v0.1.0 -m "Initial release"
          git push origin v0.1.0

      - name: Generate Changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          failOnError: false
          configuration: |
            {
              "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
              "categories": [
                {
                    "title": "## üöÄ Features",
                    "labels": ["feature", "enhancement"]
                },
                {
                    "title": "## üêõ Fixes",
                    "labels": ["fix", "bug"]
                },
                {
                    "title": "## üìù Documentation",
                    "labels": ["documentation"]
                },
                {
                    "title": "## üß∞ Maintenance",
                    "labels": ["chore", "dependencies"]
                }
              ]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{steps.changelog.outputs.changelog}}
          files: |
            install.sh
            LICENSE
            README.md
          draft: false
          prerelease: false
          generate_release_notes: ${{ steps.changelog.outputs.changelog == '' }}
