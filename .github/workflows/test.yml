---
name: Tests

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: >-
      ${{
        github.event_name == 'push' &&
        github.event.repository.fork == false &&
        'macos-latest' ||
        'ubuntu-latest'
      }}
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y zsh shellcheck

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install shellcheck shfmt

      - name: Run tests
        run: |
          chmod +x ./test/test.sh
          ./test/test.sh

      - name: Run installation tests
        if: runner.os == 'macOS'
        run: |
          chmod +x ./test/test_install.sh
          ./test/test_install.sh

      - name: Report Status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.runId;

            core.info(`Run ID: ${run_id}`);

            if (!run_id) {
              core.warning('No run ID found, skipping status report');
              return;
            }

            try {
              const jobs = await github.rest.actions.listJobsForWorkflowRun({
                owner,
                repo,
                run_id,
              });

              const job = jobs.data.jobs.find(j => j.name === 'test');
              if (!job) {
                core.warning('Could not find test job');
                return;
              }

              const conclusion = job.conclusion || 'pending';
              core.info(`Job conclusion: ${conclusion}`);

              if (conclusion === 'failure') {
                core.setFailed('Tests failed');
              }
            } catch (error) {
              core.warning(`Error getting job status: ${error.message}`);
            }
