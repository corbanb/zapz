---
name: Installation Test

on:
  pull_request:
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sundays at midnight
  workflow_dispatch:

jobs:
  test-install:
    name: Test on macOS ${{ matrix.os-version }}
    runs-on: macos-${{ matrix.os-version }}
    strategy:
      matrix:
        os-version: [monterey, ventura, sonoma]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Clean Environment
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/.local/bin/zapz
          rm -rf ~/.zapz_update_check

      - name: Setup Config
        run: |
          cp config/default.yml.example config/default.yml
          cp .secrets.example .secrets
          chmod 600 .secrets

      - name: Test Installation
        run: |
          chmod +x ./install.sh
          ./install.sh

      - name: Report Status
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const { owner, repo } = context.repo;
            const run_id = context.runId;

            core.info(`Run ID: ${run_id}`);

            if (!run_id) {
              core.warning('No run ID found, skipping status report');
              return;
            }

            try {
              const jobs = await github.rest.actions.listJobsForWorkflowRun({
                owner,
                repo,
                run_id,
              });

              const job = jobs.data.jobs.find(j => j.name.startsWith('Test on macOS'));
              if (!job) {
                core.warning('Could not find test job');
                return;
              }

              const conclusion = job.conclusion || 'pending';
              core.info(`Job conclusion: ${conclusion}`);

              if (conclusion === 'failure') {
                core.setFailed('Installation tests failed');
              }
            } catch (error) {
              core.warning(`Error getting job status: ${error.message}`);
            }
